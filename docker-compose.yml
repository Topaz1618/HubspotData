version: '3' # The version number

services:
  redis:    # Service name
    image: redis   # The Docker image to use for this service
    container_name: hubspot_redis       # Container Name
    restart: always                #  The restart policy for the container
    command: redis-server
    ports:                         # Port mapping. <Your Local Port>:<Container Port>
      - "6379:6379"
    networks:
      - hubspot_net
#    environment:
#      REDIS_PASSWORD: 123456    # Redis Password

  mysql:                                # Service name
    image: mysql:8.0                    # The Docker image to use for this service
    container_name: hotspotDB           # Container Name
    ports:                              # Port mapping. <Your Local Port>:<Container Port>
      - "3307:3306"
    restart: always                        # The restart policy for the container
    networks:                              # Specified the network application use
      - hubspot_net                        # Specified the network name be used
    environment:                           # set env varible
      MYSQL_DATABASE: "hotspotDB"
      MYSQL_ROOT_PASSWORD: "12345678"
      MYSQL_ROOT_HOST: "%"
    command: mysql -hlocalhost -uroot -p123456  # The command to run when the container starts
    volumes:                               # Mapping your host path and container path
      - "/var/lib/mysql/hotspotDB:/var/lib/mysql"   # </path/on/host>:</path/in/container>
      - "/var/lib/mysql/hotspotDB/conf/my.cnf:/etc/my.cnf"
      - "/var/lib/mysql/hotspotDB/init:/docker-entrypoint-initdb.d/" # Placed SQL scripts

  web:
    build: .
    restart: always
    command: python app.py

    ports:
      - "8001:5000"
    volumes:
      - .:/app
#      - .aws:/root/.aws
    depends_on:      # Configure the services that current application depends on
      - redis
      - mysql
    networks:
      - hubspot_net # Specified the network name be used

# Connect your application's containers together so that they can communicate
# With each other using the container names rather than IP addresses.
networks: # Define networks
  hubspot_net:  # Network name
    external:
      name: hubspot_net # If the network already exists, it will be used. If it doesn't exist, Docker Compose will create it.
#    external: true # If the network already exists, it will be used. If it doesn't exist, Docker Compose will not attempt to create it
